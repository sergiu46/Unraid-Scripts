#!/bin/bash


# Define your drives to be monitored
drives=(
  "THNSN5256GPUK_NVMe_TOSHIBA_256GB_37MB401OKSFU"
  "ADATA_SU650_2M362L186QLD"
  "HGST_HTS545050A7E680_RBA50K1L079XGC"
  "WD_Elements_SE_2622_575845324136334C45384643"
  "WD_Elements_SE_2623_575832324137333558314854"
  "WD_My_Passport_25E1_575841314138374530545032"

)

# Set sensors files directory
SENSORS_DIR="/dev/shm/ha-sensors"
mkdir -p "${SENSORS_DIR}"


drive_temp_state() {
    local device_id=$1
    
    device=$(ls -l /dev/disk/by-id/ | grep -E "${device_id}" | awk '{print $NF}' | sed 's#.*/##' | head -1)

    if [[ "$device" == "nvme"* ]]; then
        nvme_temp=$(nvme smart-log "/dev/$device" 2>/dev/null | awk '/^temperature/ {print $3}')
        echo "$nvme_temp" > "${SENSORS_DIR}/${device_id}_temp"
    else

        # Check drive state
        state=$(hdparm -C "/dev/$device" 2>/dev/null | awk -F': ' '/drive state is:/ {print $2}' | xargs)
        
        # Debug
        #echo "$device_id: $state"

        if [[ "${state}" == "active/idle" ]]; then
            echo "on" > "${SENSORS_DIR}/${device_id}_status"
            drive_temp=$(smartctl -A "/dev/$device" 2>/dev/null | awk '/Temperature_Celsius/ {print $10}')
            echo "$drive_temp" > "${SENSORS_DIR}/${device_id}_temp"
            
        elif [[ "$state" == "standby" ]]; then
            echo "off" > "${SENSORS_DIR}/${device_id}_status"
            echo "0" > "${SENSORS_DIR}/${device_id}_temp"
            
        elif [[ "$state" == "unknown" ]]; then
            drive_temp=$(smartctl -A "/dev/$device" 2>/dev/null | awk '/Temperature_Celsius/ {print $10}')
            echo "$drive_temp" > "${SENSORS_DIR}/${device_id}_temp"
            
            # Check if drive is awake with smartctl
            is_awake=$(smartctl --nocheck standby -i /dev/${device} | grep 'Power mode is' | egrep -c 'ACTIVE|IDLE')
            
            if [ "${is_wake}" == 1 ]; then
                echo "on" > ${SENSORS_DIR}/${device_id}_status
            else 
                echo "off" > ${SENSORS_DIR}/${device_id}_status
                
            fi
        fi

    fi

}


# Process each drive
for device_id in "${drives[@]}"
do
    drive_temp_state "${device_id}"
done


# CPU Temp
sensors | awk '/CPU Temp/ {gsub(/[^0-9.]/, "", $3); print $3}' > "$SENSORS_DIR/cpu_temp"

# Memory usage
free | awk '/Mem:/ {printf "%.2f\n", $3/$2 * 100}' > "$SENSORS_DIR/memory_usage"

# Cache utilization
zpool list cache -o cap | tr '\n' ' ' | awk '{print $2}' | sed 's/%//' > "$SENSORS_DIR/cache_utilization"

# Array utilization
df -ht fuse.shfs | awk '$NF=="/mnt/user" {gsub("%","", $5); print $5}' > "$SENSORS_DIR/array_utilization"

# Save /tmp and /dev/shm size to individual files
du -s /tmp | awk '{printf "%.2f\n", $1/1024}' > "$SENSORS_DIR/tmp_size"
du -s /dev/shm | awk '{printf "%.2f\n", $1/1024}' > "$SENSORS_DIR/shm_size"

# Extract fan speeds and save each one to a separate file
sensors | awk '/Array Fan:/ {gsub(/[^0-9]/, "", $3); print $3 > "'"$SENSORS_DIR"'/Array_Fan_" NR}'
