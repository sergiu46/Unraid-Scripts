#!/bin/bash

output_dir="/dev/shm/ha-sensors"
mkdir -p "$output_dir"

# List of devices by ID
for dev in /dev/disk/by-id/*; do
    if [ -b "$dev" ] && [[ ! "$dev" =~ -part[0-9]+ ]]; then
        actual_dev=$(readlink -f "$dev")

        if [[ "$dev" == *"ata-"* || "$dev" == *"usb-"* || "$dev" == *"nvme-"* ]]; then
            if [[ "$dev" == *"nvme-"* ]]; then
                status=""
            else
                status=$(hdparm -C "$actual_dev" 2>/dev/null | grep -i 'standby')
            fi

            if [ -z "$status" ]; then
                if [[ "$dev" == *"nvme-"* ]]; then
                    temp=$(nvme smart-log "$actual_dev" 2>/dev/null | grep -i 'temperature' | awk 'NR==1 {print $3}')
                else
                    temp=$(smartctl -a "$actual_dev" 2>/dev/null | grep -i 'Temperature_Celsius' | awk '{print $10}')
                fi

                # If it's a USB device, remove "-0:0" from the device name
                if [[ "$dev" == *"usb-"* ]]; then
                    clean_dev_name=$(basename "$dev" | sed 's/-0:0$//')
                else
                    clean_dev_name=$(basename "$dev")
                fi

                # Remove unit and save the numeric temperature value to the file
                if [[ "$temp" =~ ^[0-9]+$ ]]; then
                    echo "$temp" > "$output_dir/${clean_dev_name}_temp"
                fi
            fi
        fi
    fi
done

# Save /tmp and /dev/shm size to individual files
du -s /tmp | awk '{printf "%.2f\n", $1/1024}' > "$output_dir/tmp_size"
du -s /dev/shm | awk '{printf "%.2f\n", $1/1024}' > "$output_dir/dev_shm_size"

# Cache fill
zpool list cache -o cap | tr '\n' ' ' | awk '{print $2}' | sed 's/%//' > "$output_dir/mnt_cache_size"

# CPU Temp
sensors | awk '/CPU Temp/ {gsub(/[^0-9.]/, "", $3); print $3}' > "$output_dir/cpu_temp"

# Memory usage
free | awk '/Mem:/ {printf "%.2f\n", $3/$2 * 100}' > "$output_dir/memory_usage"

# Array utilization
df -ht fuse.shfs | awk '$NF=="/mnt/user" {gsub("%","", $5); print $5}' > "$output_dir/array_utilization"


